input {
  syslog {
    port => 5140
    type => "syslog"
  }
}

filter {
  if [program] == "haproxy" and [type] == "syslog" {
    grok {
      match => ["message", "%{HAPROXYHTTPVIASYSLOG}"]
    }
    grok {
      match => ["http_request", "%{URIPATH:uri_path}"]
    }
    grok {
      match => ["http_request", "%{URIPARAM:uri_param}"]
    }

    if "/v1/app" in [uri_path] {
      urldecode {
        all_fields => true
      }

      mutate {
        update => [ "type", "api_log" ]
      }

      # Extract the client id from the path
      grok {
        match => ["uri_path", "/v1/app/(?<api_client_id>[A-Fa-f0-9]+)/"]
      }

      # Remove the enclosing ?q=[ ] from the params
      grok {
        match => ["uri_param", "\?q=\[(?<api_params_string>.*)\]"]
      }

      # Change api_params_string from looking like
      #   __class__ = "Message", dest = "agent", custid = "hlgx9azb", locid = "1"
      # To looking like
      #    __class__="Message" dest="agent" custid="hlgx9azb" locid="1"
      # So the kv filter can process them
      mutate {
        gsub => [
          "api_params_string", " ", "",
          "api_params_string", ",", " "
        ]
      }

      # Turn the api_params field into
      kv {
        source => "api_params_string"
        target => "api_params"
      }
    }
  }
}

output {
  elasticsearch {
    host => localhost
  }
}
